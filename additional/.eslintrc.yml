parser: '@typescript-eslint/parser'
plugins:
  - '@typescript-eslint'
  - 'check-file'
root: true
parserOptions:
  project: true
rules:
  '@typescript-eslint/no-explicit-any': 'error'
  '@typescript-eslint/no-unsafe-argument': 'error'
  '@typescript-eslint/no-unsafe-assignment': 'error'
  '@typescript-eslint/no-unsafe-call': 'error'
  '@typescript-eslint/no-unsafe-member-access': 'error'
  '@typescript-eslint/no-unsafe-return': 'error'
  '@typescript-eslint/await-thenable': 'error'
  # Number String Object
  '@typescript-eslint/ban-types': 'error'
  '@typescript-eslint/no-duplicate-type-constituents': 'error'
  '@typescript-eslint/no-non-null-asserted-nullish-coalescing': 'error'
  # foo?.bar!
  '@typescript-eslint/no-non-null-asserted-optional-chain': 'error'
  # '@typescript-eslint/no-unnecessary-condition': 'error' [bug]
  '@typescript-eslint/no-unnecessary-type-assertion': 'error'
  '@typescript-eslint/no-unnecessary-type-constraint': 'error'
  '@typescript-eslint/non-nullable-type-assertion-style': 'error'
  '@typescript-eslint/prefer-as-const': 'error'
  '@typescript-eslint/prefer-optional-chain': 'error'
  '@typescript-eslint/prefer-reduce-type-parameter': 'error'
  '@typescript-eslint/switch-exhaustiveness-check': 'error'
  '@typescript-eslint/consistent-type-definitions': ['error', 'interface']

  'check-file/filename-naming-convention': ['error', { '**/*': '[a-z0-9-.]+' }]
  'check-file/folder-naming-convention': ['error', { '**/': '[a-z0-9-]+' }]
